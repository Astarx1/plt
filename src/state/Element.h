// Generated by dia2code
#ifndef STATE__ELEMENT__H
#define STATE__ELEMENT__H

#include <SFML/Graphics.hpp>
#include <SFML/Audio.hpp>
#include <SFML/Network.hpp>

namespace state {
  class Etat;
  class IVisiteur;
  class Observable;
  class IAccepteVisite;
}

#include "TypeID.h"
#include "Observable.h"
#include "IAccepteVisite.h"

namespace state {

  /// class Element - 
  class Element : public state::Observable, public state::IAccepteVisite {
    // Associations
    // Attributes
  public:
    Etat* etat;
  protected:
    int x;
    int y;
    TypeID typeID;
    int elemID;
    // Operations
  public:
    Element ();
    ~Element ();
    virtual TypeID getTypeID () = 0;
    virtual void accepte (IVisiteur& v ) = 0;
    int getX ();
    int getY ();
    void setX (int const x);
    void setY (int const y);
    int getElemID ();
    void setElemID (int i);
    void notifyObserver (char typeChg, sf::Time time);
    void setEtat (Etat* netat);
  };

};

#endif
